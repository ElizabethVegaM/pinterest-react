{"version":3,"sources":["components/PrintPictures/PrintPictures.js","components/Main/HeaderButtons.js","components/Main/HeaderOptions.js","components/Main/Main.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["PrintPictures","props","react_default","a","createElement","div","class","data-toggle","src","url","alt","HeaderButtons","className","name","HeaderOptions","icon","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","quantity","apiKey","search","pictures","_this2","fetch","concat","then","results","json","data","hits","map","pic","largeImageURL","setState","_this3","console","log","event","key","input","document","getElementById","value","_this4","id","placeholder","onKeyPress","handleChange","option","Main_HeaderOptions","button","Main_HeaderButtons","pics","components_PrintPictures_PrintPictures","Component","Footer","aria-haspopup","aria-expanded","n","data-target","App","components_Main_Main","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24eb1529.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PrintPictures = (props) => {\r\n  return (\r\n    <div div class=\"pinWrapper card\" data-toggle=\"modal\">\r\n      <img src={props.url} class=\"imageResult\" alt=\"\" />\r\n        <div class=\"extra\">\r\n        <button class=\"btn pin-btn\">\r\n          <i class=\"fas fa-ellipsis-h\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrintPictures;","import React from 'react';\r\n\r\nconst HeaderButtons = (props) => {\r\n  return (\r\n    <button class=\"btn header-btn\">\r\n      <i className={props.name}></i>\r\n    </button>\r\n  )\r\n};\r\n\r\nexport default HeaderButtons;","import React from 'react';\r\n\r\nconst HeaderOptions = (props) => {\r\n  return (\r\n    <button className=\"btn header-options\">\r\n      <span>{props.name}</span>\r\n      <i className={props.icon}></i>\r\n    </button>\r\n  )\r\n};\r\n\r\nexport default HeaderOptions;","import React, { Component } from 'react';\r\n// import { Container, Row, Col } from 'react-grid-system';\r\nimport PrintPictures from '../PrintPictures/PrintPictures';\r\nimport HeaderButtons from './HeaderButtons';\r\nimport HeaderOptions from './HeaderOptions';\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      quantity: 20,\r\n      apiKey: '9790189-118fcad7d04fb9dc16cd5033c',\r\n      search: '',\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://pixabay.com/api/?key=${this.state.apiKey}&q=${this.state.search}&per_page=${this.state.quantity}`)\r\n    .then(results => results.json()\r\n    ).then(data => {\r\n      let pictures = data.hits.map(pic => pic.largeImageURL)\r\n      this.setState({pictures: pictures});\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    fetch(`https://pixabay.com/api/?key=${this.state.apiKey}&q=${this.state.search}&per_page=20`)\r\n    .then(results => results.json()\r\n    ).then(data => {\r\n      let pictures = data.hits.map(pic => pic.largeImageURL)\r\n      this.setState({pictures: pictures});\r\n      console.log(this.state.pictures);\r\n    })\r\n  }\r\n\r\n  handleChange (event) {\r\n    if (event.key === 'Enter') {\r\n      let input = document.getElementById('searchInput');\r\n      this.setState({search: input.value})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const options = [{name: 'Inicio'}, {name: 'Siguiendo', icon: 'fas fa-user-friends'}, {name: 'Explorar', icon: 'fas fa-compass'}, {name: 'Rav', icon: 'fas fa-user-circle'}];\r\n    const buttons = ['fas fa-comment-dots', 'fas fa-bell', 'fas fa-ellipsis-h'];\r\n    return (\r\n      <div className=\"pinterest-header row\">\r\n        <button className=\"btn header-btn\">\r\n          <i className=\"fab fa-pinterest\"></i>\r\n        </button>\r\n        <div className=\"input-group col-7\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </span>\r\n          <input id=\"searchInput\" name='pictures' placeholder=\"Buscar\" onKeyPress={key => this.handleChange(key)} />\r\n        </div>\r\n        <div className=\"header-btns\">\r\n          {\r\n            options.map(option => <HeaderOptions name={option.name} icon={option.icon} />)\r\n          }\r\n          {\r\n            buttons.map(button => <HeaderButtons name={button} />)\r\n          }\r\n        </div>\r\n        <div id=\"imageContainer\" class=\"container-fluid main card-columns\">\r\n        {\r\n          this.state.pictures.map(pics => <PrintPictures url={pics} />)\r\n        }\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n  render () {\r\n    return (\r\n      <footer class=\"pinterest-footer\">\r\n        <div class=\"btn-group dropleft\">\r\n          <button class=\"btn footer-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <i className=\"fas fa-plus\"n/>\r\n          </button>\r\n          <div class=\"dropdown-menu\">\r\n            <button id=\"openModal\" class=\"list-group-item list-group-item-action\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">\r\n              <i class=\"fas fa-plus\"/>\r\n              <span>Subir un pin</span>\r\n            </button>\r\n            <button class=\"list-group-item list-group-item-action\">\r\n              <i class=\"fas fa-globe\" />\r\n              <span>Guardar desde un sitio web</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button class=\"btn footer-btn\">\r\n            <i class=\"fas fa-question\"></i>\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}